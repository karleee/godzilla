{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/background.js","webpack:///./src/dino.js","webpack:///./src/game.js","webpack:///./src/index.js","webpack:///./src/util.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4B;;;;;;;;;;;ACnCA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,QAAQ;AACvB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,0B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,sB;;;;;;;;;;;AC9IA,aAAa,mBAAO,CAAC,6BAAQ;AAC7B,mBAAmB,mBAAO,CAAC,yCAAc;AACzC,aAAa,mBAAO,CAAC,6BAAQ;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,qEAAqE;;AAE/F;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sB;AACA,uB;AACA,yB;AACA,2DAA2D,OAAO;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,U;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,sB;;;;;;;;;;;AChFA,aAAa,mBAAO,CAAC,6BAAQ;AAC7B,aAAa,mBAAO,CAAC,6BAAQ;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC,E;;;;;;;;;;;AC1BD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,0CAA0C,EAAE;AAC5C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,uDAAuD;AACvD,GAAG;AACH;AACA;AACA,uCAAuC;AACvC,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sB","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","class Background {\n  // Constructor for background\n  constructor(ctx, canvas, image, y, width, speed) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.image = image;\n    this.x = 0;\n    this.y = y;\n    this.width = width;\n    this.speed = speed;\n  }\n\n  // Drawing the background\n  draw() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.drawImage(this.image, this.x, this.y);\n    // this.ctx.drawImage(this.image, this.x + this.width, this.y);\n\n    // if (this.width < this.canvas.width) {\n    //   this.ctx.drawImage(this.image, this.x + this.width * 2, this.y);\n    // }\n\n    // if (this.x <= -this.width) {\n    //   this.x = 0;\n    // }\n\n    // this.scrollImage();\n  }\n\n  // Scrolls an image\n  scrollImage() {\n    this.x -= this.speed;\n  }\n}\n\nmodule.exports = Background;","// Constant for player movement changes\nconst MOVEMENT_SPEED = 1;\n\n// Creating array of sprite positions for walking\nconst width = 24;\nconst height = 24;\nlet walk = [];\nlet jump = [];\n\nfor (let i = 4; i < 10; i++) {\n  walk.push([width * i, 0, width, height]);\n}\n\njump = [[width * 11, 0, width, height]];\n\nconst SPRITES = {\n  walk,\n  jump\n};\n\nclass Dino {\n  constructor(options) {\n    // Setting player positioning and action\n    this.position = options.position;\n    this.falling = false;\n    this.frames = 0;\n    this.direction = 'idle';\n\n    // Setting canvas element\n    this.canvas = options.canvas;\n\n    // Setting new HTML img element\n    // eventually add different dino color selection here...\n    this.dino = new Image();\n    this.dino.src = '../dist/assets/spritesheets/red_dino.png';\n\n    // Setting game over state\n    this.gameOver = false;\n\n    // Setting jump counter and boolean\n    this.jumps = 0;\n    this.isJumping = false;\n  }\n\n  // Toggles direction boolean\n  toggleDirection(direction, heldDown) {\n    this.direction = direction;\n\n    if (this.direction === 'Space') {\n      this.isJumping = true;\n    }\n  }\n\n  // Gets the correct sprite\n  getSprite() {\n    if (!this.gameOver) {\n      if (this.direction === 'idle') {\n        return this.getIdleSprite(SPRITES.walk);\n      } else if (this.direction === 'Space') {\n        return this.getJumpSprite(SPRITES.jump);\n      }\n    }\n  }\n\n  // Gets idle sprite\n  getIdleSprite(sprites) {\n    if (this.frames < 10) {\n      this.frames += 1;\n      return sprites[0];\n    } else if (this.frames < 15) {\n      this.frames += 1;\n      return sprites[1];\n    } else if (this.frames < 25) {\n      this.frames += 1;\n      return sprites[2];\n    } else if (this.frames < 30) {\n      this.frames += 1;\n      return sprites[3];\n    } else if (this.frames < 35) {\n      this.frames += 1;\n      return sprites[4];\n    } else if (this.frames < 40) {\n      this.frames += 1;\n      return sprites[5];\n    } else {\n      this.frames = 0;\n      return sprites[5];\n    }\n  }\n\n  // Gets jumping sprite\n  getJumpSprite(sprites) {   \n    return sprites[0];\n  }\n\n  // Jumping action\n  jump() {\n    const gravity = 0.4;\n    let jumpStrength = 7;\n\n    if (this.isJumping) {\n      if (this.jumps === 0 || !this.onGround()) {\n        this.position[1] -= jumpStrength - gravity * this.jumps;\n        this.jumps += 1;\n      } else {\n        this.position[1] = 110;\n        this.jumps = 0;\n        this.isJumping = false;\n      }\n    }\n  }\n\n  // Checks if dino is on the ground\n  onGround() {\n    return this.position[0] === 30 && this.position[1] >= 110;\n  }\n\n  // Draws the dino sprite\n  draw(ctx) {\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    \n    const sprite = this.getSprite();\n\n    ctx.drawImage(\n      this.dino,\n      sprite[0],\n      sprite[1],\n      sprite[2],\n      sprite[3],\n      this.position[0],\n      this.position[1],\n      sprite[2],\n      sprite[3]\n    );\n  }\n\n  update(ctx) {\n    this.jump();\n    this.draw(ctx);\n  }\n}\n\nmodule.exports = Dino;","const Dino = require('./dino');\nconst Background = require('./background');\nconst Util = require('./util');\n\nclass Game {\n  // Constructor for game\n  constructor(gameCtx, gameCanvas, backgroundCtx, backgroundCanvas, foregroundCtx) {\n    // Setting context and canvas\n    this.gameCtx = gameCtx;\n    this.gameCanvas = gameCanvas;\n    this.backgroundCtx = backgroundCtx;\n    this.backgroundCanvas = backgroundCanvas;\n    this.foregroundCtx = foregroundCtx;\n\n    // Setting dino player\n    this.dino = new Dino({position: [30, this.gameCanvas.height - 40], canvas: this.gameCanvas});\n\n    // Setting game state\n    this.gameOver = false;\n    this.paused = false;\n\n    // Binding class methods\n    this.draw = this.draw.bind(this);\n    this.keyDownListener = this.keyDownListener.bind(this);\n    this.keyUpListener = this.keyUpListener.bind(this);\n\n    // Setting keypresses\n    this.setKeypresses();\n\n    // Creating background and foreground\n    this.createBackground(this.backgroundCtx, this.backgroundCanvas, this.foregroundCtx);\n  }\n\n  // Setting keypresses\n  setKeypresses() {\n    this.gameCanvas.addEventListener('keydown', this.keyDownListener);\n    this.gameCanvas.addEventListener('keyup', this.keyUpListener);\n  }\n\n  // Handler for key down\n  keyDownListener(e) {  \n    e.preventDefault(); \n    if (!this.gameOver) {     \n      if (e.code === 'Space') this.dino.toggleDirection(`${e.code}`);\n    }\n  }\n\n  // Handler for key up\n  keyUpListener(e) {\n    e.preventDefault();\n    this.dino.toggleDirection('idle');\n  }\n\n  // Creating the background and foreground\n  createBackground(backgroundCtx, backgroundCanvas, foregroundCtx) {\n    const backgroundImage = new Image();\n    backgroundImage.src = '../dist/assets/images/background.png';\n    backgroundImage.alt = 'Background';\n    this.background = new Background(backgroundCtx, backgroundCanvas, backgroundImage, 0, 1068, 0.8);\n\n    // const foregroundImage = new Image();\n    // foregroundImage.src = './assets/images/foreground-grass.png';\n    // this.foreground = new Background(foregroundCtx, foregroundImage, 250, 720, 6);\n  }\n\n  // Drawing the game\n  draw() {    \n    if (!this.gameOver && !this.paused) {\n      requestAnimationFrame(this.draw);\n      this.dino.update(this.gameCtx);\n    }\n  }\n\n  // temp start function for game\n  start() {\n    this.draw();\n  }\n\n}\n\nmodule.exports = Game;","const Game = require('./game');\nconst Dino = require('./dino');\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Getting main game canvas\n  const gameCanvas = document.getElementById('game-canvas');\n  const gameCanvasCtx = gameCanvas.getContext('2d');\n\n  // Parallax scrolling effect\n  // Getting background canvas\n  const backgroundCanvas = document.getElementById('background-canvas');\n  const backgroundCanvasCtx = backgroundCanvas.getContext('2d');\n\n  // Getting foreground canvas\n  const foregroundCanvas = document.getElementById('foreground-canvas');\n  const foregroundCanvasCtx = foregroundCanvas.getContext('2d');\n\n  const game = new Game(\n    gameCanvasCtx,\n    gameCanvas,\n    backgroundCanvasCtx,\n    backgroundCanvas,\n    foregroundCanvasCtx\n  );\n\n  game.start();\n});","const Util = {\n  getRandomIntInclusive(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  },\n  numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  },\n  createCookie(name, value, days) {\n    let expires = \"\";\n    if (days) {\n      const date = new Date();\n      date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n      expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + value + expires + \"; path=/\";\n  },\n  readCookie(name) {\n    const nameEQ = name + \"=\";\n    const ca = document.cookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n      const c = ca[i];\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n  }\n};\n\nmodule.exports = Util;"],"sourceRoot":""}